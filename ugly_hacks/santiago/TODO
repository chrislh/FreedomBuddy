-*- mode: org -*-

* TODO Integrate FreedomBuddy into Plinth

* TODO Integrate SSH/Santiago: SSH via Santiago:
   https://help.ubuntu.com/community/SSH_VPN

* TODO remove gpg requirement

   For generalized broadcasting, in case of freedom-emergency, of course.

* TODO use exmachnia for the [[file:src/scripts/freedombuddy-openvpn-client.py::subprocess.call("service%20openvpn%20restart".split())][openvpn restart]]
  SCHEDULED: <2012-08-09 Thu>

* TODO Add real Unit Testing.

  - Spec out the system through test harnesses.

    If the tests can run the system, it's complete.

  - Differentiate backends and the independent system.

* TODO figure out what other request types FBuddies should request
   from one another.

   - request "all services for this client"

      be able to hide some services from the client?

* TODO reorganize and consolidate this todo file.                      :meta:

* TODO Service time expiry                                           :expiry:

- Replies include "this service expires on".

* TODO clean up [[file:src/santiago.py::if%20not%20self.requests%5Bhost%5D:][requests]] after 5 minutes                             :expiry:

  If they don't reply in that time, it times out and should be cleaned up.

* TODO allow adding, editing, and removing reply-locations through requests. :requests:

   If somebody has my private key anyway, I'm already screwed.

* TODO support editing-in-place well                               :requests:

   I really should.  Remove + Add isn't acceptable in complex
   situations.

* TODO additional (convenience) service discovery                  :requests:

   let clients find:

   - all the services I host for them

   - all the hosts who host a specific service

   - allow some services to be hidden?

* TODO Message Queuing                                             :requests:

- Process a maximum of X MB over Y requests per unit time Z per
   friend.

- Messages that exceed that maximum are queued for the next time unit.

* TODO make list of oustanding requests query-able                 :requests:

* TODO use real sockets for communication                  :cleanup:requests:

  Remove the dependency on the HTTPS connector.

  http://docs.python.org/howto/sockets.html

* TODO use GetText for Internationalization.                        :cleanup:

   http://docs.python.org/library/gettext.html

* TODO display errors when we quit because we can't initialize      :cleanup:

   The port could already be in use.

   The cert-file might not exist.

* TODO Update documentation.                                        :cleanup:

* TODO move hosting and consuming back to defaultdicts              :cleanup:
  SCHEDULED: <2012-08-08 Wed>

  The syntax is just so much cleaner and shorter.  Implied getters and setters.
* DONE move files [2/2]                                             :cleanup:
  SCHEDULED: <2012-08-07 Tue> CLOSED: [2012-08-07 Tue 20:50]

  - [X] move data into /data
  - [X] move source into /src, /src/scripts

* DONE change the host learning method [2/2]
  CLOSED: [2012-08-05 Sun 18:20]

  replace the list of known FBuddy locations with the reply from the
  server:

  - [X] [[file:src/santiago.py::self.create_consuming_location(host,%20self.reply_service,%20reply_to)][file:santiago.py::self.create_consuming_location(host, self.reply_service, reply_to)]]

  - [X] [[file:src/santiago.py::self.create_consuming_location(client,%20self.reply_service,%20reply_to)][file:santiago.py::self.create_consuming_location(client, self.reply_service, reply_to)]]

* DONE Integrate OpenVPN/Santiago: OpenVPN via Santiago.
  CLOSED: [2012-08-05 Sun 18:29]
   See redirect-gateway for redirecting all traffic.
   http://openvpn.net/index.php/open-source/documentation/examples.html

* DONE allow adding, editing, and removing through the interfaces.
  CLOSED: [2012-08-04 Sat 15:30]


